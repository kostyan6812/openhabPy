#import the library
import subprocess
import paho.mqtt.client as mqtt
import time
import datetime


#variable
PIPE = subprocess.PIPE
MQTT_HOST = '127.0.0.1'
MQTT_PORT = 1883
MQTT_CLIENT = '433Mhz'
FILE_DAY = 'tmp/day.txt'
FILE_WEEK = 'tmp/week.txt'
FILE_MONTH = 'tmp/month.txt'
FILE_YEAR = 'tmp/year.txt'
res = 0

#start 433 MHz sniffer
cmd = './rc -x rx -i 1'

#get message from channel
def on_message(client, obj, msg):
	daymsg = str(msg.payload)
	print daymsg	

def save_file(file, key, data):
	if key == 'Day':
		f = open(file, 'w')
		f.write(key+str(data)+'\n')
		f.close()
	if key == 'Week':
		f = open(file, 'w')
		f.write(key+str(data)+'\n')
		f.close()

def read_file(file, key):
	global string
	f = open(file, 'r')
	string = f.readline().rstrip()
        string = str(string.strip(key))
	return string
	f.close()

#create MQTT client
mqttc = mqtt.Client(MQTT_CLIENT)
mqttc.connect(MQTT_HOST, MQTT_PORT)


#get RC data 
i = 0
#read save file with last date
read_file(FILE_DAY, 'Day')
if int(string) > 0:
	res = int(string)
else: res = 0

while True:
	#get date and time
	currentdt = datetime.datetime.now()
	currentday = currentdt.weekday()
	currenttime = currentdt.time()
	daydt = currentdt + datetime.timedelta(days=1)
	daydt = daydt.date() 
	deltaday = datetime.datetime(daydt.year, daydt.month, daydt.day, 0, 0, 0, 0)
	p = subprocess.Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=subprocess.STDOUT, close_fds=True)
    	s = p.stdout.readline()
	sstart = s.find(':')
	send = s.find(',')
	s = int(s[sstart+1:send])
	i += 1
	#check result from file
	if int(s) == 0: 
		s = res
	else : s
	res += s
	#save new result in file
	save_file(FILE_DAY, 'Day', res)
    	if not s: break
	if currentdt < deltaday:
		mqttc.publish('main/day/flowSensor', str(int(res)))
	if currentdt == deltaday:
		read_file(FILE_DAY, 'Day')
                if int(string) > 0:
                        resday = int(string)
                else: resday = int(res)
		resd = int(resday) + int(res)
		mqttc.publish('main/week/flowSensor', str(resd))
		mqttc.publish('main/day/flowSensor', '0')
		save_file(FILE_DAY, 'Day', 0)
		save_file(FILE_WEEK, 'Week', str(int(resd)))
		res = 0
	if currentday == 0:
	 if str(currenttime) == '00:00:00.000000' :
		read_file(FILE_WEEK, 'Week')
		if int(string) > 0:
		        resweek = int(string)
		else: resweek = 0
		resw = int(resweek)+int(resd)
		mqttc.publish('main/month/flowSensor', str(resw))
		mqttc.publish('main/week/flowSensor', '0')
                save_file(FILE_WEEK, 'Week', 0)
                save_file(FILE_MONTH, 'Month', str(int(resw)))



	
